'''
Python — это большой склад в памяти компьютера, где хранятся разные вещи. Каждая "вещь" — это объект. Объект — это базовая единица в Python.
Каждый объект имеет значение, тип, идентификатор. уникальный адрес в памяти, как номер полки на складе.
Переменная - то не "коробка", в которую вы кладёте значение, а скорее ярлык или наклейка, которую вы приклеиваете к объекту. 
Когда вы пишете x = 5, вы создаёте объект с значением 5 (типа int) и приклеиваете к нему ярлык "x". Теперь через "x" вы можете обращаться к этому объекту.
В Python переменные — это ссылки на объекты в памяти. Несколько переменных могут ссылаться на один и тот же объект.
'''
a = 10 #Создается объект 10, переменная a ссылается на него
b = a #теперь b ссылается на тот же объект, что и a.


c = 10
c = 5
#Это важно: переприсваивание не меняет старый объект, а создаёт новую ссылку.

'''
Типизация - правила, по которым Python работает с данными
Динамическая типизация. Тип определяется автоматически во время выполнения программы (runtime).
'''
x = 5 #x тип int
x = "привет" #x str (строка).

'''
Строгая типизация.
x = 5 + "10" -> "510". В Js можно, а в Python. Python не позволяет "неявные" преобразования типов. x = str(5) + "10".
'''

'''
Функции id(), type().
type() - функция возвращает тип объекта. 
'''
x = 42
print(type(x))

y = "текст"
print(type(y))

'''
id() - функция, которая возвращает уникальный идентификатор объекта. Адрес в памяти, представленный в виде целого числа. Полезно, чтобы проверить, ссылаются ли переменные на один объект.
'''

t = 10
r = t
print(id(t) == id(r), id(t), id(c))


'''
Изменяемые/неизменяемые типы.
Неизменяемые типы. Объекты, которые нельзя изменить после создания. int, float, str, tuple, bool, frozenset.
'''
s = "привет"
print(id(s))
s += '!' #s = s + '!', конкатенация строк - сложение строк
print(id(s))
print(s)
'''
Изменяемые типы. Объекты, которые можно изменить на месте, без создания нового. list, dict, set, bytearray.
'''

lst = [1, 2, 3] #изменяемый список
print(id(lst)) 
lst.append(4)
print(id(lst)) #изменяется тот же самый объект

a = [1, 2]
b = a
a.append(3)
print(b)

#Задание 1
a = 100
b = a
print(id(a), id(b))
a = 200
print(id(a), id(b))

#Задание 2
name = 'Anna'
print(type(name), id(name))
name = 'Bob'
print(type(name), id(name))

#Задание 3
a = 45
b = "hi"
c = [1, 4, 7]
print(type(a), type(b), type(c))

#Задание 4
a = 'ght'
b = ['g', 'r', 't']

#Как сделать из списка строку ['g', 'r', 't']. 'grt' -> join() - '+'.join(b). Все элементы списка должны быть строчками. 
print(a + ''.join(b))

#Задание 5
print(list(a) + b)

#Задание 6
a = {1, 2} #set
print(id(a))
a.add(3)
print(id(a))
